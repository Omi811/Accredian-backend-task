require("dotenv").config();
const express = require("express");
const cors = require("cors");
const { PrismaClient } = require("@prisma/client");
const nodemailer = require("nodemailer");
const app = express();

app.use(cors());
app.use(express.json());

const prisma = new PrismaClient();

// Referral Submission Endpoint
app.post("/api/referrals", async (req, res) => {
    const { referrerName, referrerEmail, refereeName, refereeEmail, course } = req.body;

    if (!referrerName || !referrerEmail || !refereeName || !refereeEmail || !course) {
        return res.status(400).json({ error: "All fields are required" });
    }

    try {
        const referral = await prisma.referral.create({
            data: { referrerName, referrerEmail, refereeName, refereeEmail, course }
        });
        await sendReferralEmail(referrerEmail, refereeEmail, course);
        res.status(201).json({ message: "Referral submitted successfully", referral });
    } catch (error) {
        res.status(500).json({ error: "Error saving referral" });
    }
});

// Fetch All Referrals Endpoint
app.get("/api/referrals", async (req, res) => {
    try {
        const referrals = await prisma.referral.findMany();
        res.status(200).json(referrals);
    } catch (error) {
        res.status(500).json({ error: "Error fetching referrals" });
    }
});

// Send Email Function
async function sendReferralEmail(referrerEmail, refereeEmail, course) {
    let transporter = nodemailer.createTransport({
        service: "gmail",
        auth: {
            user: process.env.EMAIL_USER,
            pass: process.env.EMAIL_PASS,
        },
    });

    await transporter.sendMail({
        from: process.env.EMAIL_USER,
        to: refereeEmail,
        subject: "You've been referred for a course!",
        text: `Hello, You have been referred for the course: ${course} by ${referrerEmail}. Enroll now!`,
    });
}

const PORT = process.env.PORT || 5000;
app.listen(PORT, () => console.log(`Server running on port ${PORT}`));
